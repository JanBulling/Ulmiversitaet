---
import { Button } from "@/ui/Button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "./Card";
import { ExternalLink } from "lucide-astro";
import Link from "@/ui/Link.astro";
import type { LinkCard } from "@/lib/types/link-card";

interface Props {
  content: LinkCard;
}

const { content } = Astro.props;
---

<Card
  className='h-fit border-y md:border border-x-0 masonry-item w-full md:w-[calc(50%-4px)] xl:w-[calc(33.33333%-5px)] mb-2'
>
  <CardHeader>
    <CardTitle>{content.heading}</CardTitle>
    {
      content.description && (
        <CardDescription>{content.description}</CardDescription>
      )
    }
  </CardHeader>
  <CardContent className='space-y-4'>
    {
      content.links.map((link) => (
        <div>
          {link.shortLink ? (
            <Link href={link.href} external variant='underline'>
              {link.text}
            </Link>
          ) : (
            <Link href={link.href} external>
              <Button variant='secondary'>
                {link.text}{" "}
                <ExternalLink class='w-4 h-4 hidden md:inline-block' />
              </Button>
            </Link>
          )}
          <p class='text-sm text-muted-foreground mt-1 space-x-1'>
            <span>{link.description}</span>
            {link.descriptionLinks?.map((descriptionLink) => (
              <Link href={descriptionLink.href} external variant='underline'>
                {descriptionLink.text}
              </Link>
            ))}
          </p>
        </div>
      ))
    }
  </CardContent>
</Card>
