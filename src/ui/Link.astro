---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

const link = cva("w-fit", {
  variants: {
    variant: {
      default: "hover:text-muted-foreground",
      primary: "text-primary rounded p-1 hover:bg-primary/10",
      accent: "text-accent hover:bg-accent/10 rounded p-1",
      underline: "underline underline-offset-2",
    },
  },
});

export interface Props
  extends Omit<HTMLAttributes<"a">, "href">,
    VariantProps<typeof link> {
  href: string;
  external?: boolean;
}

const {
  class: className,
  variant = "default",
  href,
  external,
  ...props
} = Astro.props;
---

{
  external ? (
    <a
      href={href}
      target='_blank'
      class={link({ variant, className })}
      {...props}
    >
      <slot />
    </a>
  ) : (
    <a href={href} class={link({ variant, className })} {...props}>
      <slot />
    </a>
  )
}
